import { SetCookie } from '../../Cookies/cookies.js';
import { GetCookie } from '../../Cookies/cookies.js';

console.log(navigator.cookieEnabled);

document.getElementById("show-register").addEventListener("click", function() {
    document.getElementById("login-box").style.display = "none";
    document.getElementById("register-box").style.display = "block";
});

document.getElementById("show-login").addEventListener("click", function() {
    document.getElementById("register-box").style.display = "none";
    document.getElementById("login-box").style.display = "block";
});

// Login Form Validation
document.getElementById("login-form").addEventListener("submit", function(event) {
    event.preventDefault();
    const email = document.getElementById("login-email").value;
    const password = document.getElementById("login-password").value;
    if (email === "" || password === "") {
        alert("Please fill in all fields.");
    } else {
        Login(email,password);
    }
});

// Register Form Validation
document.getElementById("register-form").addEventListener("submit", function(event) {
    event.preventDefault();
    const firstname = document.getElementById("firstname").value;
    const lastname = document.getElementById("lastname").value;
    const middlename = document.getElementById("middlename").value;
    const sfx = document.getElementById("suffix").value;

    const gender = document.getElementById("gender").value;
    const email = document.getElementById("register-email").value;
    const phone = document.getElementById("phone").value;

    AddName(firstname,lastname,middlename,sfx);
});

function Login(US,PA){
    fetch('patient_login.php', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            USEREMAIL: US,
            PASS: PA
        })
    })
    .then(res => res.json())
    .then(data => {
        if (data.status === 'success') {
            console.log('Welcome:', data.Acc.Username);
            window.location.href = '../../ANG CLIENT 1.2/clientIndex/index.html';  // This will navigate to a new URL
            SetCookie("ACCID",6,data.Acc.AccID);
            console.log(GetCookie("ACCID"));
        } else {
            console.error('Login failed:', data.message);
            alert("Incorrect Password or Email");
        }
    });
}


function Address() {
    let MunDataGlobal = []; // To store municipality data for later use
    let BarangayDataGlobal = []; // To store barangay data for later use

    Promise.all([
        fetch('../../Extensions/JSON_ADDRESS/table_region.json').then(res => res.json()),
        fetch('../../Extensions/JSON_ADDRESS/table_province.json').then(res => res.json()),
        fetch('../../Extensions/JSON_ADDRESS/table_municipality.json').then(res => res.json()),
        fetch('../../Extensions/JSON_ADDRESS/table_barangay.json').then(res => res.json())
    ])
    .then(([regionData, ProvinceData, MunData, BarangayData]) => {
        const ProvinceSelect = document.getElementById("province"); 
        const CitySelect = document.getElementById("city"); 
        const BarangaySelect = document.getElementById("barangay"); 

        // Save municipality and barangay data globally for later use
        MunDataGlobal = MunData;
        BarangayDataGlobal = BarangayData;

        ProvinceSelect.innerHTML = '<option value="">Select a Province</option>';
        CitySelect.innerHTML = '<option value="">Select a City</option>';
        BarangaySelect.innerHTML = '<option value="">Select a Barangay</option>';

        CitySelect.disabled = true;
        BarangaySelect.disabled = true;

        // Populate provinces
        ProvinceData.forEach(province => {
            if (province.province_name && province.region_id == 5) {
                const option = document.createElement("option");
                option.value = province.province_id; // Use province_id for filtering
                option.textContent = province.province_name;
                ProvinceSelect.appendChild(option);
            }
        });

        // Event: When Province changes, populate cities
        ProvinceSelect.addEventListener("change", function () {
            const selectedProvinceId = this.value;
            CitySelect.innerHTML = '<option value="">Select a City</option>';
            BarangaySelect.innerHTML = '<option value="">Select a Barangay</option>';
            CitySelect.disabled = true;
            BarangaySelect.disabled = true;

            if (selectedProvinceId) {
                const filteredCities = MunDataGlobal.filter(city => city.province_id == selectedProvinceId);
                filteredCities.forEach(city => {
                    const option = document.createElement("option");
                    option.value = city.municipality_id; // Use ID for next filtering step
                    option.textContent = city.municipality_name;
                    CitySelect.appendChild(option);
                });

                CitySelect.disabled = false;
            }
        });

        // Event: When City changes, populate barangays
        CitySelect.addEventListener("change", function(){
            const selectedCityID = this.value;
            BarangaySelect.innerHTML = '<option value="">Select a Barangay</option>';
            BarangaySelect.disabled = true;

            if (selectedCityID) {
                const filteredBarangays = BarangayDataGlobal.filter(barangay => barangay.municipality_id == selectedCityID);
                filteredBarangays.forEach(barangay => {
                    const option = document.createElement("option");
                    option.value = barangay.barangay_id; // Use barangay_id as the value
                    option.textContent = barangay.barangay_name;
                    BarangaySelect.appendChild(option);
                });

                BarangaySelect.disabled = false;
            }
        });
    })
    .catch(error => console.error('Error fetching address data:', error));
}


function AddName(First,Last,Middle,Suffix) {
    // Ensure all values exist and are not empty
    if (!First || !Last) {
        alert("Error: First name and last name are required");
        return;
    }
    
    // Use empty string for optional fields if they're undefined
    const middleName = Middle || "";
    const suffix = Suffix || "";
    
    fetch('patient_login.php', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            FN: First,
            LN: Last,
            MN: middleName,
            SFX: suffix
        })
    })
    .then(response => {
        console.log("Response status:", response.status);
        return response.json();
    })
    .then(data => {
        console.log("Full response data:", data);
        
        if (data.name && data.name.status === 'success') {
            alert('Success! Name record inserted successfully.');
        } else {
            const errorMsg = data.name ? data.name.message : 
                             (data.message || 'An error occurred while adding name information.');
            alert('Error: ' + errorMsg);
        }
    })
    .catch(error => {
        console.error('Fetch error:', error);
        alert('Error: An error occurred while processing your request.');
    });
}



Address();



<?php
header('Content-Type: application/json');
include '../../Database/DBConnect.php';

// Check if connection is successful
if (!$conn) {
    die(json_encode(['error' => "Connection failed: " . mysqli_connect_error()]));
}

$Account = [];

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $data = json_decode(file_get_contents('php://input'), true);
    $response = [];

    // ✅ LOGIN HANDLER
    if (isset($data['USEREMAIL'], $data['PASS'])) {
        $UserOrEmail = $conn->real_escape_string($data['USEREMAIL']);
        $Password = $conn->real_escape_string($data['PASS']);

        $stmt = $conn->prepare("SELECT * FROM account 
            WHERE StatusID = 1 AND UserTypeID = 1  
            AND ACC_Password = ?
            AND (ACC_Username = ? OR ACC_Email = ?)
        ");

        if ($stmt) {
            $stmt->bind_param("sss", $Password, $UserOrEmail, $UserOrEmail);
            if ($stmt->execute()) {
                $result = $stmt->get_result();

                if ($result->num_rows === 1) {
                    $row = $result->fetch_assoc();

                    $Account = [
                        "Username" => $row["ACC_Username"],
                        "Password" => $row["ACC_Password"],
                        "Status" => $row["StatusID"],
                        "UserTypeID" => $row["UserTypeID"],
                        "Email" => $row["ACC_Email"],
                        "AccID" => $row["AccountID"]
                    ];

                    $response['login'] = ["status" => "success", "Acc" => $Account];
                } else {
                    $response['login'] = ["status" => "error", "message" => "Invalid credentials or inactive account."];
                }
            } else {
                $response['login'] = ["status" => "error", "message" => "Query execution failed: " . $stmt->error];
            }
        } else {
            $response['login'] = ["status" => "error", "message" => "Query preparation failed: " . $conn->error];
        }
    }
    
    // ✅ NAME INSERT HANDLER
    if (isset($data['FN'], $data['LN'], $data['MN'], $data['SFX'])) {
        $First = $conn->real_escape_string($data['FN']);
        $Last = $conn->real_escape_string($data['LN']);
        $Middle = $conn->real_escape_string($data['MN']);
        $SFX = $conn->real_escape_string($data['SFX']);

        $stmt = $conn->prepare("INSERT INTO `name`(`N_FirstName`, `N_LastName`, `N_MiddleName`, `N_Suffix`) VALUES (?,?,?,?)");

        if ($stmt) {
            $stmt->bind_param("ssss", $First, $Last, $Middle, $SFX);   

            if ($stmt->execute()) {
                $response['name'] = ['status' => 'success', 'message' => 'Name record inserted successfully'];
            } else {
                $response['name'] = ['status' => 'error', 'message' => 'Failed to insert name record: ' . $stmt->error];
            }

            $stmt->close();   
        } else {
            $response['name'] = ['status' => 'error', 'message' => 'Failed to prepare the SQL query: ' . $conn->error];
        }
    }

    // If neither login nor name data was provided
    if (empty($response)) {
        $response = ['status' => 'error', 'message' => 'No recognizable action. Missing login or name fields.'];
    }

    echo json_encode($response);
}

$conn->close();
?>
